<?php
// $Id$
/**
 * @file
 * Gives the ability to export to excel
 */

/**
 * Implementation of hook_perm().
 */
function views_export_xls_perm() {
  return array('xls export views');
}

/**
 * Implementation of hook_views_api().
 */
function views_export_xls_views_api() {
  return array(
    'api' => 2,
  );
}

/**
 * Preprocess xls output template.
 */
function template_preprocess_views_export_xls_file(&$vars) {
  //call preproccess
  $view     = $vars['view'];
  $fields   = &$view->field;

  drupal_set_header('Cache-Control: max-age=60, must-revalidate');
  $filename = strtr(
    $vars['options']['filename'],
    array('%view' => check_plain($view->name))
  );
  if ($filename) {
    drupal_set_header('Content-Disposition: attachment; filename="'. $filename .'"');
  }

  $rows = $vars['rows'];

  $vars['header'] = array();
  foreach ($fields as $key => $field) {
    if (empty($field->options['exclude'])) {
      $vars['header'][$key] = check_plain($field->label());
    }
  }

  $vars['themed_rows'] = array();
  
  foreach ($rows as $num => $row) {
    $items = array();
    foreach (array_keys($fields) as $key) {
      if (empty($fields[$key]->options['exclude'])) {
        $items[$key] = $fields[$key]->theme($row);
      }
    }

    $vars['themed_rows'][$num] = $items;
  }
  
  
  //stip tags and make utf8 decode
  foreach ($vars['themed_rows'] as $i => $values) {
    foreach ($values as $j => $value) {
      $vars['themed_rows'][$i][$j] = utf8_decode(strip_tags($value));
    }
  }
}
